@model Proyecto_BD.Models.Laboratorista

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script>        
        $(document).ready(function () {
            if (@ViewBag.confirmacion == 1) {
                swal("Buen trabajo!", "Datos agregados correctamente!", "success");

                document.getElementById("nombre").value = "";
                document.getElementById("apPaterno").value = "";
                document.getElementById("apMaterno").value = "";
                document.getElementById("apMaterno").value = "";
                document.getElementById("direccion").value = "";
                document.getElementById("cp").value = "";
                document.getElementById("telefono").value = "";
                
            }
            else {
                swal("Ocurrio un error!", "Datos no se agregaron correctamente!", "warning");
                document.getElementById("nombre").value = "";
                document.getElementById("apPaterno").value = "";
                document.getElementById("apMaterno").value = "";
                document.getElementById("apMaterno").value = "";
                document.getElementById("direccion").value = "";
                document.getElementById("cp").value = "";
                document.getElementById("telefono").value = "";
            }
        })
    </script>

    <div class="form-horizontal">
        <h4>Laboratorista</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Persona.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Persona.nombre, new { htmlAttributes = new { @id = "nombre", @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Persona.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Persona.apPaterno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Persona.apPaterno, new { htmlAttributes = new { @id = "apPaterno", @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Persona.apPaterno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Persona.apMaterno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Persona.apMaterno, new { htmlAttributes = new { @id = "apMaterno", @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Persona.apMaterno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Persona.direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Persona.direccion, new { htmlAttributes = new { @id = "direccion", @class = "form-control", @required = "required", @minlength = "10" } })
                @Html.ValidationMessageFor(model => model.Persona.direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Persona.codigoPostal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Persona.codigoPostal, new { htmlAttributes = new { @id = "cp", @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Persona.codigoPostal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Persona.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Persona.telefono, new { htmlAttributes = new { @id = "telefono", @class = "form-control", @required = "required", @type = "number", @min = "0" } })
                @Html.ValidationMessageFor(model => model.Persona.telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Persona.sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Persona.sexo,  new  List <SelectListItem>
                    {
                    new  SelectListItem {Text = "Femenino" , Value =  "F"  },
                    new  SelectListItem {Text = "Maculino" , Value =  "M"  }
                    }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Persona.sexo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Usuario.rol, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Usuario.rol,  new  List <SelectListItem>
                    {
                    new  SelectListItem {Text = "Administrador" , Value =  "1"  },
                    new  SelectListItem {Text = "Laboratorista" , Value =  "2"  }
                    }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Usuario.rol, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.turno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.turno,  new  List <SelectListItem>
                    {
                    new  SelectListItem {Text = "MAÑANA" , Value =  "MAÑANA"  },
                    new  SelectListItem {Text = "Tarde" , Value =  "Tarde"  }
                    }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.turno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @if (ViewBag.listLab != null)
            {
                @Html.LabelFor(model => model.Laboratorio.IdLaboratorio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Laboratorio.IdLaboratorio, new SelectList(ViewBag.listLab, "IdLaboratorio", "Nombre"), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Laboratorio.IdLaboratorio, "", new { @class = "text-danger" })
                </div>
            }
        </div>

        <div>
            <div class="col-md-10">
                <button type="submit" value="Insertar" class="btn btn-primary" style="margin-left: 20.5%;">
                    Insertar
                </button>
            </div>
        </div>

    </div>
}

<div style="margin-left: 70%;">
    <button class="button" style="vertical-align:middle"><span>@Html.ActionLink("Regresar a la lista", "Index", null, new { style = "color: #FFFFFF; margin-right: 20.5 %;" })</span></button>
</div>
